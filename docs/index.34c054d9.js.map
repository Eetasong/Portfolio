{"mappings":"AAEA,kBAAkB;AAElB,MAAM,OAAO,SAAS,cAAc,CAAC;AACrC,MAAM,WAAU,SAAS,cAAc,CAAC,eAAe;AACvD,MAAM,QAAQ,SAAS,cAAc,CAAC,YAAY;AAClD,MAAM,MAAM,SAAS,cAAc,CAAC,UAAU;AAE9C,KAAK,gBAAgB,CAAC,UAAU,CAAA;IAC5B,EAAE,cAAc;IAEZ;AACR;AAEA,MAAM,WAAW,CAAC,SAAS;IACvB,MAAM,eAAe,QAAQ,aAAa;IAC1C,MAAM,eAAe,aAAa,aAAa,CAAC;IAChD,QAAQ,GAAG,CAAC;IACZ,aAAa,SAAS,GAAG;IACzB,QAAQ,SAAS,CAAC,GAAG,CAAC;IACtB,QAAQ,SAAS,CAAC,MAAM,CAAC;AAC7B;AAEA,MAAM,aAAa,CAAA;IACf,MAAM,eAAe,QAAQ,aAAa;IAC1C,MAAM,eAAe,aAAa,aAAa,CAAC;IAEhD,aAAa,SAAS,GAAG;IACzB,QAAQ,SAAS,CAAC,GAAG,CAAC;IACtB,QAAQ,SAAS,CAAC,MAAM,CAAC;AAC7B;AAEA,MAAM,eAAe,CAAA;IACjB,MAAM,KAAK;IACX,OAAO,GAAG,IAAI,CAAC,OAAO,OAAO,WAAW;AAC5C;AAEA,MAAM,iBAAiB;IACnB,MAAM,gBAAgB,SAAS,KAAK,CAAC,IAAI;IACzC,MAAM,aAAa,MAAM,KAAK,CAAC,IAAI;IACnC,MAAM,WAAW,IAAI,KAAK,CAAC,IAAI;IAE/B,IAAG,kBAAkB,IACjB,SAAS,UAAU;SAGnB,WAAW;IAGf,IAAG,eAAe,IACd,SAAS,OAAO;SAEf,IAAK,CAAC,aAAc,aACrB,SAAS,OAAO;SAGhB,WAAW;IAGf,IAAG,aAAa,IACZ,SAAS,KAAK;SAGd,WAAW;AAGnB","sources":["src/js/main.js"],"sourcesContent":["\r\n\r\n// form validation\r\n\r\nconst form = document.getElementById('form');\r\nconst fullName= document.getElementById('fullName') || '';\r\nconst email = document.getElementById('email') || '';\r\nconst msg = document.getElementById('msg') || '';\r\n\r\nform.addEventListener('submit', e => {\r\n    e.preventDefault();\r\n        \r\n        validateInputs();\r\n});\r\n\r\nconst setError = (element, message) => {\r\n    const inputControl = element.parentElement;\r\n    const errorDisplay = inputControl.querySelector('.invalid-feedback');\r\n    console.log(errorDisplay);\r\n    errorDisplay.innerHTML = message;\r\n    element.classList.add(\"is-invalid\");\r\n    element.classList.remove(\"is-valid\");\r\n}\r\n\r\nconst setSuccess = element => {\r\n    const inputControl = element.parentElement;\r\n    const errorDisplay = inputControl.querySelector('.invalid-feedback');\r\n    \r\n    errorDisplay.innerText = '';\r\n    element.classList.add(\"is-valid\");\r\n    element.classList.remove(\"is-invalid\");\r\n}\r\n\r\nconst isValidEmail = email => {\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n}\r\n\r\nconst validateInputs = () => {\r\n    const fullNameValue = fullName.value.trim();\r\n    const emailValue = email.value.trim();\r\n    const msgValue = msg.value.trim();\r\n\r\n    if(fullNameValue === ''){\r\n        setError(fullName, 'Your Name is required')\r\n    }\r\n    else {\r\n        setSuccess(fullName);\r\n    }\r\n\r\n    if(emailValue === ''){\r\n        setError(email, 'Your email is required')\r\n    }\r\n    else if ( !isValidEmail (emailValue)){\r\n        setError(email, 'Providea valid Email address')\r\n    }\r\n    else {\r\n        setSuccess(email);\r\n    }\r\n\r\n    if(msgValue === ''){\r\n        setError(msg, 'Your message is required')\r\n    }\r\n    else {\r\n        setSuccess(msg);\r\n    }\r\n\r\n};\r\n"],"names":[],"version":3,"file":"index.34c054d9.js.map","sourceRoot":"/__parcel_source_root/"}